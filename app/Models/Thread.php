<?php

namespace App\Models;

use App\Common\RecordsActivity;
use Illuminate\Database\Eloquent\Model;

class Thread extends Model
{
    use RecordsActivity;
    protected $fillable = ['title', 'user_id', 'body'];

    protected $with = ['creator', 'channel'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static :: addGlobalScope('replyCount', function ($builder){
           return $builder->withCount('replies');
        });

        static :: deleting(function ($thread){
            return $thread->replies->each->delete();

        });


    }

    public function path()
    {
        return "/threads/{$this->channel->slug}/{$this->id}";
    }

    public function replies()
    {
        return $this->hasMany(Reply::class);
    }

    public function creator()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    public function channel()
    {
        return $this->belongsTo(Channel::class);
    }

    public function addReply($reply)
    {
        return $this->replies()->create($reply);
    }

    public function scopeUsername($query, $username)
    {
        $user = User::where('name', $username)->firstOrfail();

        return $query->where('user_id', $user->id);
    }

    public function scopePopular($query)
    {
        $query->orders = [];
        return $query->orderBy('replies_count', 'DESC');
    }
}


